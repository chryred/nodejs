<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.shinsegae.smon.adm.AdmMapper">
	<resultMap id="rm_getSimplelistUser" type="com.shinsegae.smon.model.adm.DsBatchVO">
        <result column="MGR_ID"        property="mgrId"        javaType="string"  jdbcType="VARCHAR" /> 
        <result column="MGR_NAME"      property="mgrName"      javaType="string"  jdbcType="VARCHAR" /> 
        <result column="MGR_SYS"       property="mgrSys"     	javaType="string"  jdbcType="VARCHAR" /> 
        <result column="MGR_GRADE"     property="mgrGrade"     javaType="string"  jdbcType="VARCHAR" /> 
        <result column="MGR_STATE_CD"     property="mgrStatecd"     javaType="string"  jdbcType="VARCHAR" />
    </resultMap>
   <select id="getSimplelistUser" resultMap="rm_getSimplelistUser" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">
		 SELECT * FROM (
			SELECT A.*
			     , ROW_NUMBER() OVER(ORDER BY 1 ASC) AS RN
			 FROM (
			 SELECT MGR_ID,MGR_NAME,MGR_SYS,MGR_GRADE,MGR_STATE_CD FROM MGR
			 where 1=1
			 <if test="mgrName != '' and mgrName != null">
		  		  AND mgr_Name like CONCAT('%', #{mgrName}, '%')
		     </if>
		     <if test="mgrId != '' and mgrId != null">
		  		 AND mgr_Id like CONCAT('%', #{mgrId}, '%')
		   </if>
		   <if test="mgrGrade != '' and mgrGrade != null">
		  		 AND mgr_Grade like CONCAT('%', #{mgrGrade}, '%')
		   </if>
		   <if test="mgrStatecd != '' and mgrStatecd != null">
		  		 AND MGR_STATE_CD like CONCAT('%', #{mgrStatecd}, '%')
		   </if>
			  
			 ) A
		) WHERE RN BETWEEN #{start} AND #{end}	
		<choose>
			<when test="colid != null and colid != ''">
				ORDER BY ${colid} ${sorting}
			</when>
			<otherwise>
				ORDER BY 1
			</otherwise>
		</choose>
	</select>
	
 
			
    
 	<select id="getCountlistUser" resultType="java.lang.Integer" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">		 
		 SELECT COUNT(*) AS COUNT	 FROM MGR
		 where 1=1
			 <if test="mgrName != '' and mgrName != null">
		  		  AND mgr_Name like CONCAT('%', #{mgrName}, '%')
		     </if>
		     <if test="mgrId != '' and mgrId != null">
		  		 AND mgr_Id like CONCAT('%', #{mgrId}, '%')
		   </if>
		   <if test="mgrGrade != '' and mgrGrade != null">
		  		 AND mgr_Grade = #{mgrGrade}
		   </if>
	</select>
	
	
	<select id="getCountlistgroup" resultType="java.lang.Integer" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">		 
		 SELECT COUNT(*) AS COUNT	 FROM  CM_ROLE_GROUP  
	 	 where 1=1
			 <if test="authGroupnm != '' and authGroupnm != null">
		  		  AND AUTH_GROUP_NM like CONCAT('%', #{authGroupnm}, '%')
		     </if>
		     <if test="useyn != '' and useyn != null">
		  		 AND USE_YN like CONCAT('%', #{useyn}, '%')
		   </if>
		   <if test="roleGroup != '' and roleGroup != null">
		  		 AND ROLE_GROUP = #{roleGroup}
		   </if>
	</select>
	
	<select id="getCountlistGruop" resultType="java.lang.Integer" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">		 
		 SELECT COUNT(*) AS COUNT	 FROM CM_ROLE_GROUP
		 where 1=1
			 <if test="authGroupid != '' and authGroupid != null">
		  		  AND AUTH_GROUP_ID =  #{authGroupid} 
		     </if>
		      
	</select>
	
	<select id="listMenuIdcheck" resultType="java.lang.Integer" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">		 
		 SELECT COUNT(*) AS COUNT	 FROM CM_MENU
		 where 1=1
			 <if test="id != '' and id != null">
		  		  AND menu_id = #{id} 
		     </if>
		      
	</select>
	

	
	<resultMap id="rm_getDsMenuList" type="com.shinsegae.smon.model.adm.DsBatchVO">
        <result column="ID" property="id" javaType="string"  jdbcType="VARCHAR" />
        <result column="P_ID" property="pId" javaType="string"  jdbcType="VARCHAR" />
        <result column="NAME" property="name" javaType="string"  jdbcType="VARCHAR" />
        <result column="LEV" property="lev" javaType="Integer"  jdbcType="NUMERIC" />
        <result column="OPEN" property="open" javaType="string"  jdbcType="VARCHAR" />
        <result column="ICON" property="icon" javaType="string"  jdbcType="VARCHAR" />
        <result column="SUB_JOB_CNT" property="subJobCnt" javaType="Integer"  jdbcType="NUMERIC" />
    </resultMap>
    
    <select id="getDsMenuList" resultMap="rm_getDsMenuList" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">		
	 	select menu_id as ID , up_menu_id as P_ID ,menu_name AS NAME  , menu_level as LEV  , 'false'  AS OPEN  ,
	 	  '${contextPath}/css/ztree/zTreeStyle/img/diy/3.png' AS ICON , '10' as SUB_JOB_CNT 
	 	  from cm_menu	  
	</select>	
	
	<resultMap id="rm_getMenuDetail" type="java.util.HashMap">
        <result column="ID" property="id" javaType="string"  jdbcType="VARCHAR" />
        <result column="pId" property="pId" javaType="string"  jdbcType="VARCHAR" />
        <result column="NAME" property="name" javaType="string"  jdbcType="VARCHAR" />
        <result column="LEV" property="lev" javaType="Integer"  jdbcType="NUMERIC" />
        <result column="OPEN" property="open" javaType="string"  jdbcType="VARCHAR" />
        <result column="ICON" property="icon" javaType="string"  jdbcType="VARCHAR" />
        <result column="menulink" property="menulink" javaType="string"  jdbcType="VARCHAR" />
        <result column="menuorder" property="menuorder" javaType="string"  jdbcType="VARCHAR" />
        <result column="useyn" property="useyn" javaType="string"  jdbcType="VARCHAR" />
        <result column="menuImg" property="menuImg" javaType="string"  jdbcType="VARCHAR" />
        <result column="SUB_JOB_CNT" property="subJobCnt" javaType="Integer"  jdbcType="NUMERIC" />
    </resultMap>
    
    <select id="getMenuDetail" resultMap="rm_getMenuDetail" parameterType="HashMap">		
	 	select menu_id as ID , up_menu_id as pId ,menu_name AS NAME  , menu_level as LEV  , 'false'  AS OPEN  ,
	 	  menu_link as menulink,menu_order as menuorder,use_yn as useyn,'${contextPath}/css/ztree/zTreeStyle/img/diy/3.png' AS ICON , '10' as SUB_JOB_CNT 
	 	  ,NVL(menu_img,'glyphicon glyphicon-expand') as menuImg   
	 	  from cm_menu	  
	 	  where menu_id = #{folderPath}
	</select>	
 
	 	<!-- 문의에 대한 답글 등록 --> 
	<insert id="updateMenuList"  parameterType="com.shinsegae.smon.model.adm.DsBatchVO">
	 <![CDATA[
	  MERGE INTO CM_MENU
            USING DUAL
            ON (MENU_ID =   #{menuId, jdbcType=VARCHAR})
            WHEN MATCHED THEN
                      UPDATE SET
                            UP_MENU_ID = #{upMenuId , jdbcType=VARCHAR},
							MENU_ORDER = #{menuOrder},
							MENU_NAME  = #{menuNm, jdbcType=VARCHAR},
							MENU_LINK  = #{menulink, jdbcType=VARCHAR},
							USE_YN     = #{useyn}	,
							MENU_IMG   = #{menuImg, jdbcType=VARCHAR}												
            WHEN NOT MATCHED THEN
                      INSERT(
					MENU_ID,
					UP_MENU_ID,
					MENU_ORDER,
					MENU_NAME,
					MENU_LINK,
					USE_YN,
					MENU_LEVEL,
					MENU_IMG
				)values ( 
				    #{menuId, jdbcType=VARCHAR},
				    #{upMenuId , jdbcType=VARCHAR},
			 	    #{menuOrder},
			        #{menuNm, jdbcType=VARCHAR},
			        #{menulink, jdbcType=VARCHAR},
			        #{useyn}, 
			        '1' ,
			        #{menuImg, jdbcType=VARCHAR}
		        )
 
    
		     ]]> 
	</insert>
	
 
  	<!-- 문의에 대한 답글 등록 --> 
	<insert id="listMenuGruopSave"  parameterType="com.shinsegae.smon.model.adm.DsBatchVO">
	 <![CDATA[
	  MERGE INTO CM_MENU_AUTH_MAP
            USING DUAL
            ON (MENU_ID =   #{id, jdbcType=VARCHAR} AND AUTH_GROUP_ID =   #{authGroupid, jdbcType=VARCHAR})
            WHEN MATCHED THEN
            UPDATE SET
                  AUTH_CD = #{authCd, jdbcType=VARCHAR}	,
                  MOD_ID = '',
                  MOD_DATE = SYSDATE()										
            WHEN NOT MATCHED THEN
            INSERT(
					MENU_ID,
					AUTH_GROUP_ID,
					AUTH_CD,
					REG_ID
				  ) VALUES ( 
				    #{id, jdbcType=VARCHAR},
				    #{authGroupid , jdbcType=VARCHAR},
			 	    #{authCd, jdbcType=VARCHAR},
			        ''
		          )    
		     ]]> 
	</insert>
 
	<resultMap id="rm_getlistAuthGruop" type="com.shinsegae.smon.model.adm.DsBatchVO">  
        <result column="AUTH_GROUP_ID" property="authGroupid" javaType="string"  jdbcType="VARCHAR" />
        <result column="AUTH_GROUP_NM" property="authGroupnm" javaType="string"  jdbcType="VARCHAR" />
        <result column="AUTH_GROUP_REMARK" property="authGroupremark" javaType="string"  jdbcType="VARCHAR" />
        <result column="USE_YN" property="useyn" javaType="string"  jdbcType="VARCHAR" />
        <result column="REG_ID" property="regId" javaType="string"  jdbcType="VARCHAR" />
        <result column="AUTH_LEVEL" property="authLevel" javaType="string"  jdbcType="VARCHAR" />
        <result column="ROLE_GROUP" property="roleGroup" javaType="string"  jdbcType="VARCHAR" />
    </resultMap>
    
    <select id="getlistAuthGruop" resultMap="rm_getlistAuthGruop" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">		
	 	SELECT AUTH_GROUP_ID,AUTH_GROUP_NM,AUTH_GROUP_REMARK,USE_YN,NVL(REG_ID,'') as REG_ID,NVL(AUTH_LEVEL,'') as AUTH_LEVEL,NVL(ROLE_GROUP,'')  as ROLE_GROUP
	 	FROM CM_ROLE_GROUP  
	 	 where 1=1
			 <if test="authGroupnm != '' and authGroupnm != null">
		  		  AND AUTH_GROUP_NM like CONCAT('%', #{authGroupnm}, '%')
		     </if>
		     <if test="useyn != '' and useyn != null">
		  		 AND USE_YN like CONCAT('%', #{useyn}, '%')
		   </if>
		   <if test="roleGroup != '' and roleGroup != null">
		  		 AND ROLE_GROUP = #{roleGroup}
		   </if>
		   <choose>
			<when test="colid != null and colid != ''">
				ORDER BY ${colid} ${sorting}
			</when>
			<otherwise>
				ORDER BY 1
			</otherwise>
		</choose>
	</select>	
    
    <resultMap id="rm_selectauthGroup" type="java.util.HashMap">  
        <result column="AUTH_GROUP_ID" property="authGroupid" javaType="string"  jdbcType="VARCHAR" />
        <result column="AUTH_GROUP_NM" property="authGroupnm" javaType="string"  jdbcType="VARCHAR" />
        <result column="AUTH_GROUP_REMARK" property="authGroupremark" javaType="string"  jdbcType="VARCHAR" />
        <result column="USE_YN" property="useyn" javaType="string"  jdbcType="VARCHAR" />
        <result column="REG_ID" property="regId" javaType="string"  jdbcType="VARCHAR" />
        <result column="AUTH_LEVEL" property="authLevel" javaType="string"  jdbcType="VARCHAR" />
        <result column="ROLE_GROUP" property="roleGroup" javaType="string"  jdbcType="VARCHAR" />
    </resultMap>
    
    <select id="selectauthGroup" resultMap="rm_selectauthGroup" parameterType="HashMap">		
	 	SELECT AUTH_GROUP_ID,AUTH_GROUP_NM,AUTH_GROUP_REMARK,USE_YN,NVL(REG_ID,'') as REG_ID,NVL(AUTH_LEVEL,'') as AUTH_LEVEL,NVL(ROLE_GROUP,'')  as ROLE_GROUP
	 	FROM CM_ROLE_GROUP 
	 	where  AUTH_GROUP_ID  = #{authGroupid}
	</select>
	
		<!-- 권한그룹 인서트및 업데이트 -->
	<insert id="listAuthGruopSave"  parameterType="com.shinsegae.smon.model.adm.DsBatchVO">
	 <![CDATA[
	  		MERGE INTO CM_ROLE_GROUP
            USING DUAL
            ON (AUTH_GROUP_ID  = #{authGroupid , jdbcType=VARCHAR})
            WHEN MATCHED THEN
                      UPDATE SET
                            AUTH_GROUP_NM = #{authGroupnm , jdbcType=VARCHAR},
							AUTH_GROUP_REMARK = #{authGroupremark , jdbcType=VARCHAR},
							USE_YN  = #{useyn , jdbcType=VARCHAR},
							ROLE_GROUP  = #{roleGroup , jdbcType=VARCHAR}										
            WHEN NOT MATCHED THEN
                      INSERT(
                     AUTH_GROUP_ID, 
					 AUTH_GROUP_NM,  
					 AUTH_GROUP_REMARK, 
					 USE_YN,
					 ROLE_GROUP 	
					)values ( 
				    #{authGroupid , jdbcType=VARCHAR},
				    #{authGroupnm , jdbcType=VARCHAR},
				    #{authGroupremark , jdbcType=VARCHAR}, 
				    #{useyn , jdbcType=VARCHAR}, 
				    #{roleGroup , jdbcType=VARCHAR}				    
		       		)    
		     ]]> 
	</insert>
	
	
	<select id="selectNavigation" resultType="HashMap" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">
		SELECT -- dc.menu_id, CONCAT(REPEAT('       ', dc2.lev-1), menu_name) AS name, up_menu_id, CAST(dc2.lev AS CHAR) AS lev
		         DC.MENU_ID as MENU_ID
			   , DC.UP_MENU_ID as UP_MENU_ID
		       , DC.MENU_NAME as MENU_NAME
		       , DC.MENU_LINK as MENU_LINK
		       , DC.MENU_ORDER as MENU_ORDER
		       , IFNULL(NULLIF(DC.MENU_IMG, ''),'glyphicon glyphicon-expand') as MENU_IMG
		 FROM ( SELECT  GET_MENU_TREE(menu_id) AS MENU_ID, @level as LEV
		           FROM (SELECT  @start_with := '0', @code := @start_with, @level := 0, @menu_order := 0) VARS
		                  , CM_MENU
		          WHERE @code IS NOT NULL) DC2
		  JOIN CM_MENU DC
		    ON DC.MENU_ID = DC2.MENU_ID
		   AND DC.USE_YN = 'Y'
		  LEFT JOIN CM_MENU_AUTH_MAP MAP
		    ON DC.MENU_ID = MAP.MENU_ID
		 WHERE MAP.AUTH_CD != 'XX' 
		   AND MAP.AUTH_GROUP_ID = #{authGroupid, jdbcType=VARCHAR}
		ORDER BY DC.MENU_ORDER, DC.MENU_ID, DC.UP_MENU_ID
	</select>
	
	<select id="selectGroupId" resultMap="rm_selectauthGroup" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">     
    	SELECT
			AUTH_GROUP_ID ,
			AUTH_GROUP_NM
		FROM
			CM_ROLE_GROUP
		 
    </select>
	
	<delete id="listAuthGruopDelete" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">
    	DELETE from CM_ROLE_GROUP WHERE AUTH_GROUP_ID  = #{authGroupid}    	 	
    </delete>
    
    <delete id="deleteMenuJson" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">
    	DELETE from CM_MENU WHERE MENU_ID =   #{menuId}	 	
    </delete>
	
	<resultMap id="rm_listMenuGruopJson" type="com.shinsegae.smon.model.adm.DsBatchVO">  
        <result column="ID" property="id" javaType="string"  jdbcType="VARCHAR" />
        <result column="pId" property="pId" javaType="string"  jdbcType="VARCHAR" />
        <result column="LEV" property="level" javaType="string"  jdbcType="VARCHAR" />
        <result column="NAME" property="name" javaType="string"  jdbcType="VARCHAR" />
        <result column="menulink" property="menulink" javaType="string"  jdbcType="VARCHAR" />
        <result column="useyn" property="useyn" javaType="string"  jdbcType="VARCHAR" />
        <result column="menuorder" property="menuorder" javaType="string"  jdbcType="VARCHAR" />
        <result column="AUTH_CD" property="authCd" javaType="string"  jdbcType="VARCHAR" />
        <result column="rownum" property="rownum" javaType="Integer"  jdbcType="NUMERIC" />
        <result column="authGroupid" property="authGroupid" javaType="Integer"  jdbcType="NUMERIC" />
    </resultMap> 

    <select id="listMenuGruopJson" resultMap="rm_listMenuGruopJson" parameterType="com.shinsegae.smon.model.adm.DsBatchVO">		
	 		SELECT A.MENU_ID as ID ,
	 				A.UP_MENU_ID  as pId,
	 				LEVEL  AS LEV,
	 				A.MENU_NAME AS NAME,
	 				A.MENU_LINK AS menulink,
	 				A.USE_YN AS useyn,
	 				A.MENU_ORDER AS menuorder,
	 				DECODE(B.AUTH_GROUP_ID,NULL , 'XX', NVL(AUTH_CD,'VW')) AS AUTH_CD 
		FROM CM_MENU A
		LEFT JOIN CM_MENU_AUTH_MAP B ON (B.MENU_ID = A.MENU_ID AND B.AUTH_GROUP_ID = #{authGroupid})
		START WITH A.MENU_ID IN (SELECT DISTINCT MENU_ID FROM CM_MENU WHERE UP_MENU_ID ='0')
		CONNECT BY PRIOR A.MENU_ID = A.UP_MENU_ID
		ORDER SIBLINGS BY A.MENU_ORDER
	</select>
	
	<update id="getListUserUpdate" parameterType = "com.shinsegae.smon.model.adm.DsBatchVO">
  	   UPDATE MGR 
	     SET MGR_GRADE = decode( #{mgrGrade, jdbcType=VARCHAR},'admin','900','user','100','700')
	       , MGR_STATE_CD = #{mgrStatecd, jdbcType=VARCHAR}
	   WHERE MGR_ID = #{mgrId, jdbcType=VARCHAR}
	 </update>
	 	 
	
	<sql id = "pagingHeader">
		SELECT * FROM (
			SELECT A.*
			     , ROW_NUMBER() OVER(ORDER BY 1 ASC) AS RN
			 FROM (
	</sql>
	<sql id = "pagingFooter">
			) A
		) WHERE RN BETWEEN #{start} AND #{end}	
	</sql>
</mapper>
